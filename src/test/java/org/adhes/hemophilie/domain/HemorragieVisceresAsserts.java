package org.adhes.hemophilie.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HemorragieVisceresAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHemorragieVisceresAllPropertiesEquals(HemorragieVisceres expected, HemorragieVisceres actual) {
        assertHemorragieVisceresAutoGeneratedPropertiesEquals(expected, actual);
        assertHemorragieVisceresAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHemorragieVisceresAllUpdatablePropertiesEquals(HemorragieVisceres expected, HemorragieVisceres actual) {
        assertHemorragieVisceresUpdatableFieldsEquals(expected, actual);
        assertHemorragieVisceresUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHemorragieVisceresAutoGeneratedPropertiesEquals(HemorragieVisceres expected, HemorragieVisceres actual) {
        assertThat(expected)
            .as("Verify HemorragieVisceres auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHemorragieVisceresUpdatableFieldsEquals(HemorragieVisceres expected, HemorragieVisceres actual) {
        assertThat(expected)
            .as("Verify HemorragieVisceres relevant properties")
            .satisfies(e -> assertThat(e.getReponse()).as("check reponse").isEqualTo(actual.getReponse()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getExploration()).as("check exploration").isEqualTo(actual.getExploration()))
            .satisfies(e -> assertThat(e.getExamenLesion()).as("check examenLesion").isEqualTo(actual.getExamenLesion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHemorragieVisceresUpdatableRelationshipsEquals(HemorragieVisceres expected, HemorragieVisceres actual) {
        // empty method
    }
}
